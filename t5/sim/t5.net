*-----------------------------------------------------------------------------
*
* To use a subcircuit, the name must begin with 'X'.  For example:
* X1 1 2 3 4 5 uA741
*
* connections:   non-inverting input
*                |  inverting input
*                |  |  positive power supply
*                |  |  |  negative power supply
*                |  |  |  |  output
*                |  |  |  |  |
.subckt uA741    1  2  3  4  5
*
  c1   11 12 8.661E-12
  c2    6  7 30.00E-12
  dc    5 53 dx
  de   54  5 dx
  dlp  90 91 dx
  dln  92 90 dx
  dp    4  3 dx
  egnd 99  0 poly(2) (3,0) (4,0) 0 .5 .5
  fb    7 99 poly(5) vb vc ve vlp vln 0 10.61E6 -10E6 10E6 10E6 -10E6
  ga    6  0 11 12 188.5E-6
  gcm   0  6 10 99 5.961E-9
  iee  10  4 dc 15.16E-6
  hlim 90  0 vlim 1K
  q1   11  2 13 qx
  q2   12  1 14 qx
  r2    6  9 100.0E3
  rc1   3 11 5.305E3
  rc2   3 12 5.305E3
  re1  13 10 1.836E3
  re2  14 10 1.836E3
  ree  10 99 13.19E6
  ro1   8  5 50
  ro2   7 99 100
  rp    3  4 18.16E3
  vb    9  0 dc 0
  vc    3 53 dc 1
  ve   54  4 dc 1
  vlim  7  8 dc 0
  vlp  91  0 dc 40
  vln   0 92 dc 40
.model dx D(Is=800.0E-18 Rs=1)
.model qx NPN(Is=800.0E-18 Bf=93.75)
.ends

.options savecurrents

Vcc vcc 0 5.0
Vee vee 0 -5.0
Vin in 0 0 ac 1.0 sin(0 10m 1k)

X1 non_inv inv_in vcc vee outp uA741

R1 non_inv 0 1000
C1 in non_inv 220n

R3 inv_in 0 1000
R4 outp x 100000
R41 x inv_in 100000
R42 x inv_in 100000

R2 outp out 1000
C2 out 0 110n

.op
.end

.control

set hcopypscolor=0
set color0=white
set color1=black
set color2=red
set color3=blue
set color4=violet
set color5=rgb:3/8/0
set color6=rgb:4/0/0

print all

* time analysis
tran 1e-5 1e-2
plot v(out) v(in)
hardcopy vo1.ps v(out) v(in)
echo vo1_FIG

* frequency analysis
ac dec 10 10 100MEG
plot vdb(out)-vdb(in)
plot (vp(out)-vp(in))*180/PI
hardcopy vo1f.ps vdb(out)-vdb(in)
echo vo1f_FIG
hardcopy vo1p.ps (vp(out)-vp(in))*180/PI
echo vo1p_FIG

let transfer = vdb(out)-vdb(in)
let transferv = vm(out)/vm(in)

meas ac gain MAX transfer
meas ac gainv MAX transferv

let zone = gain - 3
meas ac lower WHEN transfer = zone
meas ac upper WHEN transfer = zone CROSS = LAST
let bandwidth = upper - lower
let centralf = sqrt(lower*upper)
print centralf

let cost = 2 + 0.66 + 1 + 300 + 13323.29204
let gaindev = abs(100-gainv)
let freqdev = abs(1000-centralf)
let merit = 1/(cost*(gaindev+freqdev+(1e-6)))

*input impedance in kohm
let Zi = -v(in)[20]/Vin#branch[20]*0.001
let real = RE(Zi)
let imag = IM(Zi)
let modulus = abs(Zi)
let phase = phase(Zi)*180/PI
print Zi modulus phase

echo "data_TAB"
echo "Gain  = $&gainv"
echo "Gain(dB) = $&gain"
echo "Lower cut-off frequency = $&lower Hz"
echo "Upper cut-off frequency = $&upper Hz"
echo "Bandwidth = $&bandwidth Hz"
echo "Central frequency = $&centralf Hz"
echo "Input impedance = $&real + j*$&imag kOhm"
echo "Input impedance modulus = $&modulus kOhm"
echo "Input impedance phase = $&phase degrees"
echo "data_END"

echo "merit_TAB"
print cost merit
echo "merit_END"

*need a different setup to measure output impedance

quit

.endc 
